{"version":3,"sources":["Containers/logo.png","Components/action.js","Components/Pagination/pagination.js","Components/Cards/Card.js","Components/Spinner.js","Components/Cards/CardArray.js","Components/SearchBox/SearchBox.js","Components/Cards/cardReducer.js","Components/Pagination/PaginationReducer.js","Components/PokemonInfo/PokemonInfoReducer.js","Containers/rootReducer.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","nextPage","data","type","prevPage","fetchPokemons","offset","dispatch","a","fetch","response","json","results","console","log","setPokemonInfo","fetchingData","receivedData","PaginationText","styled","p","Buttons","div","Pagination","requestForNextPage","offsetCheck","props","requestForPrevPage","this","pokemons","pokemonInfo","names1","map","name","names2","checkingNames","some","names","includes","defs","reduce","accumulator","url","def","Promise","resolve","reject","push","all","pokemonData","prevProps","prevOffset","currOffset","nextRequest","onClick","className","Component","connect","state","pagination","value","card","ownProps","actionCreators","bindActionCreators","defaultProps","fetchPokemonInfo","CardInformation","Container","Cards","H1","h1","H3","h3","PokemonImage","img","Card","index","number","weight","types","src","alt","Spinner","LoadingData","class","ReceivedData","PokemonGrid","CardArray","updateFilteredPokemon","searchfield","filteredPokemons","filter","toLowerCase","finalPokemons","found","find","newIndex","replace","key","pokemonInfoLoaded","Search","SearchStyling","input","SearchBox","searchChange","placeholder","onChange","initialState","rootReducer","combineReducers","action","concat","middleware","logger","thunk","store","createStore","load","states","composeWithDevTools","applyMiddleware","save","App","event","setState","target","APP","Header","PokemonLogo","logo","Credits","Body","h2","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.57953965.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.083ed650.png\";","export const GET_OFFSET = \"GET_OFFSET\";\nexport const GET_POKEMONS = \"GET_POKEMONS\";\nexport const SET_POKEMONINFO = \"SET_POKEMONINFO\";\n\nexport function nextPage(data) {\n  return {\n    type: GET_OFFSET,\n    data\n  };\n}\n\nexport function prevPage(data) {\n  return {\n    type: GET_OFFSET,\n    data\n  };\n}\n\nexport const fetchPokemons = offset => async dispatch => {\n  try {\n    const API_URL = \"https://pokeapi.co/api/v2/pokemon/?offset=\";\n    const LIMIT_URL = \"&limit=20\";\n    const response = await fetch(`${API_URL}${offset}${LIMIT_URL}`);\n    const { results = [] } = await response.json();\n    return dispatch({\n      type: \"GET_POKEMONS\",\n      data: results\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const setPokemonInfo = data => dispatch => {\n  return dispatch({\n    type: SET_POKEMONINFO,\n    data: data\n  });\n};\n\nexport const fetchingData = () => {\n  return {\n    type: \"fetchingData\",\n    data: true\n  };\n};\n\nexport const receivedData = () => {\n  return {\n    type: \"ReceivedData\",\n    data: true\n  };\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport \"../../Containers/App.css\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {\n  nextPage,\n  prevPage,\n  fetchPokemons,\n  setPokemonInfo,\n  fetchingData,\n  receivedData\n} from \"../action\";\n\nconst PaginationText = styled.p`\n  font-size: 2vh;\n  padding: 1vh 1vw;\n  border: solid 2px white;\n  border-radius: 16px;\n  margin-right: 1vw;\n  width: 7vw;\n  height: 2vh;\n  text-align: center;\n`;\n\nconst Buttons = styled.div`\n  color: white;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n`;\n\nclass Pagination extends Component {\n  async nextRequest() {\n    const { pokemons, pokemonInfo } = this.props;\n\n    const names1 = pokemons.map(pokemons => {\n      return pokemons.name;\n    });\n    console.log(names1, \"NAMES!\");\n    const names2 = pokemonInfo.map(pokemons => {\n      return pokemons.name;\n    });\n    console.log(names2, \"NAMES!\");\n\n    const checkingNames = names1.some(names => names2.includes(names));\n    console.log(checkingNames, \"CHECKING NAMES\");\n\n    if (checkingNames !== true) {\n      this.props.fetchingData();\n      const defs = this.props.pokemons.reduce((accumulator, { url }) => {\n        const def = new Promise(async (resolve, reject) => {\n          try {\n            const response = await fetch(url);\n            const results = await response.json();\n\n            resolve(results);\n          } catch (e) {\n            reject(e);\n          }\n        });\n\n        accumulator.push(def);\n        return accumulator;\n      }, []);\n      const pokemonData = await Promise.all(defs);\n      await this.props.setPokemonInfo(pokemonData);\n      this.props.receivedData();\n    } else {\n      console.log(\"ERROR WHEN SETTING POKEMON\");\n    }\n  }\n\n  requestForNextPage = () => {\n    const offsetCheck =\n      this.props.offset <= 346 ? this.props.offset + 20 : this.props.offset;\n    this.props.nextPage(offsetCheck);\n  };\n\n  requestForPrevPage = () => {\n    const offsetCheck =\n      this.props.offset !== 0 ? this.props.offset - 20 : this.props.offset;\n    this.props.prevPage(offsetCheck);\n  };\n\n  async componentDidUpdate(prevProps) {\n    const { offset: prevOffset } = prevProps;\n    const { offset: currOffset } = this.props;\n    if (prevOffset < currOffset) {\n      await this.props.fetchPokemons(this.props.offset);\n\n      console.log(this.props.pokemons, \"FETCH POKEMONS!!!!!\");\n      await this.nextRequest();\n    } else if (prevOffset > currOffset) {\n      return this.props.fetchPokemons(this.props.offset);\n    }\n  }\n\n  render() {\n    return (\n      <Buttons>\n        <PaginationText\n          onClick={this.requestForPrevPage}\n          className=\"pagination-prev\"\n        >\n          &laquo; Previous\n        </PaginationText>\n        <PaginationText\n          onClick={this.requestForNextPage}\n          className=\"pagination-next\"\n        >\n          Next &raquo;\n        </PaginationText>\n      </Buttons>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  return {\n    offset: state.pagination.value,\n    pokemons: state.card.pokemons,\n    pokemonInfo: state.pokemonInfo.pokemonInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  console.log(\"ownProps\", ownProps);\n\n  const actionCreators = bindActionCreators(\n    {\n      nextPage,\n      prevPage,\n      fetchPokemons,\n      setPokemonInfo,\n      fetchingData,\n      receivedData\n    },\n    dispatch\n  );\n\n  return {\n    ...actionCreators\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n\nPagination.defaultProps = {\n  pokemons: [],\n  fetchPokemons: () => {},\n  fetchPokemonInfo: () => {}\n};\nPagination.propTypes = {\n  offset: PropTypes.number.isRequired,\n  fetchPokemons: PropTypes.func,\n  pokemons: PropTypes.array\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"../../Containers/App.css\";\n\nconst CardInformation = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n    justify-content center; \n    align-content: center;\n`;\nconst Container = styled.div`\n  &:hover {\n    animation: float 3s ease-in-out infinite;\n  }\n`;\nconst Cards = styled.div`\n  background: rgb(0, 0, 0);\n  background: linear-gradient(\n    144deg,\n    rgba(0, 0, 0, 1) 0%,\n    rgba(149, 214, 238, 1) 33%,\n    rgba(0, 145, 210, 1) 100%\n  );\n  border: solid 4px white;\n  border-radius: 12px;\n  height: 45vh;\n  width: 17vw;\n  margin: 2vh;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst H1 = styled.h1`\n  font-size: 3vh;\n  text-align: center;\n`;\n\nconst H3 = styled.h3`\n  font-size: 2vh;\n  text-align: center;\n`;\n\nconst PokemonImage = styled.img`\n  margin-left: auto;\n  margin-right: auto;\n  width: 6vw;\n  height: 15vh;\n`;\n\nconst Card = ({ name, index, number, weight, types }) => {\n  const type = types || [];\n  // console.log(type, \"TYPE CHECK\");\n  return (\n    <Container>\n      <Cards>\n        <CardInformation>\n          <H1> {name} </H1>\n          <H3> Number: {number} </H3>\n          <PokemonImage\n            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index}.png`}\n            alt=\"pokemon\"\n          />\n          <H3>\n            Type: {type[0]} {type[1]}\n          </H3>\n          <H3>Weight: {weight} </H3>\n        </CardInformation>\n      </Cards>\n    </Container>\n  );\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { fetchingData, receivedData } from \"./action\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nclass Spinner extends Component {\n  render() {\n    if (this.props.LoadingData === true) {\n      return <div class=\"loader\">Loading...</div>;\n    } else {\n      return null;\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  LoadingData: state.pagination.fetchingData,\n  ReceivedData: state.pagination.receivedData\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchingData,\n      receivedData\n    },\n\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Spinner);\n","import React, { Component } from \"react\";\nimport \"../../Containers/App.css\";\nimport Card from \"./Card\";\nimport Spinner from \"../Spinner\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  fetchPokemons,\n  setPokemonInfo,\n  fetchingData,\n  receivedData\n} from \"../action\";\n\nconst PokemonGrid = styled.div`\n  background: transparent;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  height: auto;\n  width: 100vw;\n`;\n\nclass CardArray extends Component {\n  async componentDidMount() {\n    await this.props.fetchingData();\n    await this.props.fetchPokemons(this.props.offset);\n\n    const defs = this.props.pokemons.reduce((accumulator, { url }) => {\n      const def = new Promise(async (resolve, reject) => {\n        try {\n          const response = await fetch(url);\n          const results = await response.json();\n\n          resolve(results);\n        } catch (e) {\n          reject(e);\n        }\n      });\n\n      accumulator.push(def);\n      return accumulator;\n    }, []);\n    const pokemonData = await Promise.all(defs);\n    await this.props.setPokemonInfo(pokemonData);\n    await this.props.receivedData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.searchfield !== this.props.searchfield) {\n      console.log(\n        \"SEARCHFIELD DID UPDATE IN CARDARRAY\",\n        this.props.searchfield\n      );\n      this.updateFilteredPokemon(this.props.searchfield);\n    }\n  }\n\n  updateFilteredPokemon = searchfield => {\n    if (this.props.searchfield === \"\") {\n      return this.props.pokemons;\n    } else {\n      const filteredPokemons = this.props.pokemons.filter(pokemons => {\n        return pokemons.name.toLowerCase().includes(searchfield.toLowerCase());\n      });\n      console.log(\"filtered Pokemon is Set\", filteredPokemons);\n      let finalPokemons =\n        searchfield !== \"\" ? filteredPokemons : this.props.pokemons;\n      console.log(finalPokemons, \"POKEMON DATA\");\n\n      return finalPokemons;\n    }\n  };\n\n  render() {\n    const { pokemonInfo = [] } = this.props;\n    if (this.props.LoadingData === true) {\n      return <Spinner />;\n    } else {\n      return (\n        <PokemonGrid>\n          {this.updateFilteredPokemon(this.props.searchfield).map(\n            (pokemons, index) => {\n              const found = pokemonInfo.find(\n                ({ name }) => name === pokemons.name\n              );\n              const initialIndex = pokemons.url.replace(\"v2\", \"\");\n              const newIndex = initialIndex.replace(/[^0-9]/g, \"\");\n              const types = found\n                ? found.types.map(types => {\n                    return types.type.name;\n                  })\n                : null;\n\n              return (\n                <div key={index} className=\"testing\">\n                  <Card\n                    name={found ? found.name : null}\n                    index={newIndex}\n                    number={newIndex}\n                    weight={found ? found.weight : null}\n                    types={types}\n                  />\n                </div>\n              );\n            }\n          )}\n        </PokemonGrid>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  offset: state.pagination.value,\n  pokemons: state.card.pokemons,\n  pokemonInfo: state.pokemonInfo.pokemonInfo,\n  pokemonInfoLoaded: state.pokemonInfoLoaded,\n  LoadingData: state.pagination.fetchingData\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchPokemons,\n      setPokemonInfo,\n      fetchingData,\n      receivedData\n    },\n\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardArray);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"../../Containers/App.css\";\n\nconst Search = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst SearchStyling = styled.input`\n  background: transparent;\n  border-radius: 16px;\n  height: 5vh;\n  width: 20vw;\n  text-align: center;\n  color: #dde5ff;\n  border: solid 2px white;\n  outline: none;\n  font-size: 2vh;\n`;\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <Search>\n      <SearchStyling\n        type=\"search\"\n        placeholder=\"Search Pokemon!\"\n        onChange={searchChange}\n      />\n    </Search>\n  );\n};\n\nexport default SearchBox;\n","import { GET_POKEMONS } from \"../action\";\n\nconst initialState = {\n  pokemons: []\n};\n\nexport default function(state = initialState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case GET_POKEMONS:\n      return {\n        pokemons: data\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_OFFSET } from \"../action\";\n\nconst initialState = {\n  value: 0,\n  fetchingData: false,\n  receivedData: false\n};\n\nexport default function(state = initialState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case GET_OFFSET:\n      return {\n        ...state,\n        value: data\n      };\n\n    case \"fetchingData\":\n      return {\n        ...state,\n        fetchingData: true,\n        receivedData: false\n      };\n\n    case \"ReceivedData\":\n      return {\n        ...state,\n        fetchingData: false,\n        receivedData: true\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_POKEMONINFO } from \"../action\";\n\nconst initialState = {\n  pokemonInfo: []\n};\n\nexport default function(state = initialState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case SET_POKEMONINFO:\n      return {\n        ...state,\n        pokemonInfo: state.pokemonInfo.concat(data)\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport card from \"../Components/Cards/cardReducer.js\";\nimport pagination from \"../Components/Pagination/PaginationReducer.js\";\nimport pokemonInfo from \"../Components/PokemonInfo/PokemonInfoReducer.js\";\n\nconst rootReducer = combineReducers({\n  card,\n  pagination,\n  pokemonInfo\n});\n\nexport default rootReducer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.png\";\nimport Pagination from \"../Components/Pagination/pagination\";\nimport CardArray from \"../Components/Cards/CardArray\";\nimport SearchBox from \"../Components/SearchBox/SearchBox\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport styled from \"styled-components\";\nimport { load, save } from \"redux-localstorage-simple\";\n\nconst middleware = [logger, thunk];\nconst store = createStore(\n  rootReducer,\n  load({ states: [\"card\", \"Pagination\"] }),\n  composeWithDevTools(\n    applyMiddleware(...middleware, save({ states: [\"card\", \"Pagination\"] }))\n  )\n);\n\nclass App extends Component {\n  state = {\n    searchfield: \"\"\n  };\n\n  searchChange = event => {\n    this.setState({\n      searchfield: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <APP>\n          <Header>\n            <PokemonLogo src={logo} className=\"App-Logo\" alt=\"pokemon-logo\" />\n            <Credits className=\" credits \">Made Possible With PokéAPI!</Credits>\n            <SearchBox searchChange={this.searchChange} />\n            <Pagination className=\"pagination\" />\n          </Header>\n          <Body>\n            <CardArray searchfield={this.state.searchfield} />\n          </Body>\n        </APP>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\nconst APP = styled.div`\n  min-height: 100vh;\n  min-width: 100vw;\n  background: rgb(189, 19, 19);\n  background: linear-gradient(\n    0deg,\n    rgba(189, 19, 19, 1) 0%,\n    rgba(80, 0, 9, 1) 60%,\n    rgba(49, 143, 200, 1) 93%\n  );\n  background-attachment: fixed;\n`;\n\nconst Header = styled.div`\nbackground: transparent;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}\n`;\n\nconst PokemonLogo = styled.img`\n  height: 20vh;\n  width: 20vw;\n`;\n\nconst Credits = styled.h2`\n  color: white;\n  font-size: 2vh;\n`;\n\nconst Body = styled.div`\n  background: transparent;\n  height: auto;\n  width: auto;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}