{"version":3,"sources":["Containers/logo.png","Components/action.js","Components/Pagination/pagination.js","Components/Cards/Card.js","Components/Spinner.js","Components/Cards/CardArray.js","Components/SearchBox/SearchBox.js","Components/PokemonDetails.js","Components/Cards/cardReducer.js","Components/Pagination/PaginationReducer.js","Components/PokemonInfo/PokemonInfoReducer.js","Containers/rootReducer.js","Containers/store.js","Containers/LocalStorage.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","nextPage","data","type","prevPage","fetchPokemons","offset","dispatch","a","fetch","response","json","results","console","log","setPokemonInfo","fetchingData","receivedData","gatherStats","pokemonInfo","match","base_stat","stats","map","object","PaginationText","styled","p","Buttons","div","Pagination","requestForNextPage","offsetCheck","props","requestForPrevPage","this","pokemons","names1","name","names2","checkingNames","some","names","includes","defs","reduce","accumulator","url","def","Promise","resolve","reject","push","all","pokemonData","prevProps","prevOffset","currOffset","nextRequest","onClick","className","Component","connect","state","pagination","value","card","ownProps","actionCreators","bindActionCreators","defaultProps","fetchPokemonInfo","CardInformation","Container","Cards","H1","h1","H3","h3","PokemonImage","img","Card","index","number","weight","types","to","src","alt","Spinner","LoadingData","class","ReceivedData","PokemonGrid","CardArray","updateFilteredPokemon","searchfield","filteredPokemons","filter","toLowerCase","finalPokemons","Date","pokemonsLoadedAt","found","find","newIndex","replace","key","pokemonInfoLoaded","Search","SearchStyling","input","SearchBox","searchChange","placeholder","onChange","PokemonDetail","params","id","undefined","numbers","statProps","withRouter","statsNames","initialState","pokemonLoadedAt","rootReducer","combineReducers","action","concat","middleware","logger","thunk","persistedState","checkingState","localStorage","getItem","JSON","parse","err","loadFromLocalStorage","store","createStore","composeWithDevTools","applyMiddleware","subscribe","stringify","setItem","saveToLocalStorage","getState","App","event","setState","target","basename","APP","Header","PokemonLogo","logo","Credits","exact","path","Body","render","PokemonDetails","h2","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b94183db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.083ed650.png\";","export const GET_OFFSET = \"GET_OFFSET\";\nexport const GET_POKEMONS = \"GET_POKEMONS\";\nexport const SET_POKEMONINFO = \"SET_POKEMONINFO\";\n\nexport function nextPage(data) {\n  return {\n    type: GET_OFFSET,\n    data\n  };\n}\n\nexport function prevPage(data) {\n  return {\n    type: GET_OFFSET,\n    data\n  };\n}\n\nexport const fetchPokemons = offset => async dispatch => {\n  try {\n    const API_URL = \"https://pokeapi.co/api/v2/pokemon/?offset=\";\n    const LIMIT_URL = \"&limit=20\";\n    const response = await fetch(`${API_URL}${offset}${LIMIT_URL}`);\n    const { results = [] } = await response.json();\n    return dispatch({\n      type: \"GET_POKEMONS\",\n      data: results\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const setPokemonInfo = data => dispatch => {\n  console.log(data);\n  return dispatch({\n    type: SET_POKEMONINFO,\n    data: data\n  });\n};\n\nexport const fetchingData = () => {\n  return {\n    type: \"fetchingData\",\n    data: true\n  };\n};\n\nexport const receivedData = () => {\n  return {\n    type: \"ReceivedData\",\n    data: true\n  };\n};\n\nexport const gatherStats = (pokemonInfo, match) => dispatch => {\n  console.log(pokemonInfo, match);\n  const element = pokemonInfo[match - 1];\n  const statsArray = element.stats;\n  const base_stat = statsArray.map(object => {\n    return object.base_stat;\n  });\n  console.log(base_stat);\n\n  return dispatch({\n    type: \"GATHER_STATS\",\n    data: base_stat\n  });\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport \"../../Containers/App.css\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport {\n  nextPage,\n  prevPage,\n  fetchPokemons,\n  setPokemonInfo,\n  fetchingData,\n  receivedData\n} from \"../action\";\n\nconst PaginationText = styled.p`\n  font-size: 2vh;\n  padding: 1vh 1vw;\n  border: solid 2px white;\n  border-radius: 16px;\n  margin-right: 1vw;\n  width: 7vw;\n  height: 2vh;\n  text-align: center;\n`;\n\nconst Buttons = styled.div`\n  color: white;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n`;\n\nclass Pagination extends Component {\n  async nextRequest() {\n    const { pokemons, pokemonInfo } = this.props;\n\n    const names1 = pokemons.map(pokemons => {\n      return pokemons.name;\n    });\n    console.log(names1, \"NAMES!\");\n    const names2 = pokemonInfo.map(pokemons => {\n      return pokemons.name;\n    });\n    console.log(names2, \"NAMES!\");\n\n    const checkingNames = names1.some(names => names2.includes(names));\n    console.log(checkingNames, \"CHECKING NAMES\");\n\n    if (checkingNames !== true) {\n      this.props.fetchingData();\n      const defs = this.props.pokemons.reduce((accumulator, { url }) => {\n        const def = new Promise(async (resolve, reject) => {\n          try {\n            const response = await fetch(url);\n            const results = await response.json();\n\n            resolve(results);\n          } catch (e) {\n            reject(e);\n          }\n        });\n\n        accumulator.push(def);\n        return accumulator;\n      }, []);\n      const pokemonData = await Promise.all(defs);\n      await this.props.setPokemonInfo(pokemonData);\n      this.props.receivedData();\n    } else {\n      console.log(\"ERROR WHEN SETTING POKEMON\");\n    }\n  }\n\n  requestForNextPage = () => {\n    const offsetCheck =\n      this.props.offset <= 346 ? this.props.offset + 20 : this.props.offset;\n    this.props.nextPage(offsetCheck);\n  };\n\n  requestForPrevPage = () => {\n    const offsetCheck =\n      this.props.offset !== 0 ? this.props.offset - 20 : this.props.offset;\n    this.props.prevPage(offsetCheck);\n  };\n\n  async componentDidUpdate(prevProps) {\n    const { offset: prevOffset } = prevProps;\n    const { offset: currOffset } = this.props;\n    if (prevOffset < currOffset) {\n      await this.props.fetchPokemons(this.props.offset);\n\n      console.log(this.props.pokemons, \"FETCH POKEMONS!!!!!\");\n      await this.nextRequest();\n    } else if (prevOffset > currOffset) {\n      return this.props.fetchPokemons(this.props.offset);\n    }\n  }\n\n  render() {\n    return (\n      <Buttons>\n        <PaginationText\n          onClick={this.requestForPrevPage}\n          className=\"pagination-prev\"\n        >\n          &laquo; Previous\n        </PaginationText>\n        <PaginationText\n          onClick={this.requestForNextPage}\n          className=\"pagination-next\"\n        >\n          Next &raquo;\n        </PaginationText>\n      </Buttons>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  return {\n    offset: state.pagination.value,\n    pokemons: state.card.pokemons,\n    pokemonInfo: state.pokemonInfo.pokemonInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  console.log(\"ownProps\", ownProps);\n\n  const actionCreators = bindActionCreators(\n    {\n      nextPage,\n      prevPage,\n      fetchPokemons,\n      setPokemonInfo,\n      fetchingData,\n      receivedData\n    },\n    dispatch\n  );\n\n  return {\n    ...actionCreators\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n\nPagination.defaultProps = {\n  pokemons: [],\n  fetchPokemons: () => {},\n  fetchPokemonInfo: () => {}\n};\nPagination.propTypes = {\n  offset: PropTypes.number.isRequired,\n  fetchPokemons: PropTypes.func,\n  pokemons: PropTypes.array\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"../../Containers/App.css\";\nimport { Link } from \"react-router-dom\";\n\nconst CardInformation = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n    justify-content center; \n    align-content: center;\n    \n`;\nconst Container = styled.div`\n  &:hover {\n    animation: float 3s ease-in-out infinite;\n    border-radius 16px;\n  }\n`;\nconst Cards = styled.div`\n  background: rgb(0, 0, 0);\n  background: linear-gradient(\n    144deg,\n    rgba(0, 0, 0, 1) 0%,\n    rgba(149, 214, 238, 1) 33%,\n    rgba(0, 145, 210, 1) 100%\n  );\n  border: solid 4px white;\n  border-radius: 12px;\n  height: 45vh;\n  width: 17vw;\n  margin: 2vh;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst H1 = styled.h1`\n  font-size: 3vh;\n  text-align: center;\n  text-transform: capitalize;\n`;\n\nconst H3 = styled.h3`\n  font-size: 2vh;\n  text-align: center;\n  text-transform: capitalize;\n`;\n\nconst PokemonImage = styled.img`\n  margin-left: auto;\n  margin-right: auto;\n  width: 6vw;\n  height: 15vh;\n`;\n\nconst Card = ({ name, index, number, weight, types }) => {\n  const type = types || [];\n  // console.log(type, \"TYPE CHECK\");\n  return (\n    <Container>\n      <Link to={`${number}`}>\n        <Cards>\n          <CardInformation>\n            <H1> {name} </H1>\n            <H3> Number: {number} </H3>\n            <PokemonImage\n              src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index}.png`}\n              alt=\"pokemon\"\n            />\n            <H3>\n              Type: {type[0]} {type[1]}\n            </H3>\n            <H3>Weight: {weight} </H3>\n          </CardInformation>\n        </Cards>\n      </Link>\n    </Container>\n  );\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport { fetchingData, receivedData } from \"./action\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nclass Spinner extends Component {\n  render() {\n    if (this.props.LoadingData === true) {\n      return <div class=\"loader\">Loading...</div>;\n    } else {\n      return null;\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  LoadingData: state.pagination.fetchingData,\n  ReceivedData: state.pagination.receivedData\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchingData,\n      receivedData\n    },\n\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Spinner);\n","import React, { Component } from \"react\";\nimport \"../../Containers/App.css\";\nimport Card from \"./Card\";\nimport Spinner from \"../Spinner\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  fetchPokemons,\n  setPokemonInfo,\n  fetchingData,\n  receivedData\n} from \"../action\";\n\nconst PokemonGrid = styled.div`\n  background: transparent;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  height: auto;\n  width: 100vw;\n`;\n\nclass CardArray extends Component {\n  async componentDidMount() {\n    const oneHour = 60 * 60 * 1000;\n    if (\n      !this.props.LoadingData ||\n      new Date() - this.props.pokemonsLoadedAt > oneHour\n    ) {\n      await this.props.fetchingData();\n      await this.props.fetchPokemons(this.props.offset);\n    }\n    const defs = this.props.pokemons.reduce((accumulator, { url }) => {\n      const def = new Promise(async (resolve, reject) => {\n        try {\n          const response = await fetch(url);\n          const results = await response.json();\n\n          resolve(results);\n        } catch (e) {\n          reject(e);\n        }\n      });\n\n      accumulator.push(def);\n      return accumulator;\n    }, []);\n    const pokemonData = await Promise.all(defs);\n    await this.props.setPokemonInfo(pokemonData);\n    await this.props.receivedData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.searchfield !== this.props.searchfield) {\n      console.log(\n        \"SEARCHFIELD DID UPDATE IN CARDARRAY\",\n        this.props.searchfield\n      );\n      this.updateFilteredPokemon(this.props.searchfield);\n    }\n  }\n\n  updateFilteredPokemon = searchfield => {\n    if (this.props.searchfield === \"\") {\n      return this.props.pokemons;\n    } else {\n      const filteredPokemons = this.props.pokemons.filter(pokemons => {\n        return pokemons.name.toLowerCase().includes(searchfield.toLowerCase());\n      });\n      console.log(\"filtered Pokemon is Set\", filteredPokemons);\n      let finalPokemons =\n        searchfield !== \"\" ? filteredPokemons : this.props.pokemons;\n      console.log(finalPokemons, \"POKEMON DATA\");\n\n      return finalPokemons;\n    }\n  };\n\n  render() {\n    const { pokemonInfo = [] } = this.props;\n    if (this.props.LoadingData === true) {\n      return <Spinner />;\n    } else {\n      return (\n        <PokemonGrid>\n          {this.updateFilteredPokemon(this.props.searchfield).map(\n            (pokemons, index) => {\n              const found = pokemonInfo.find(\n                ({ name }) => name === pokemons.name\n              );\n              const initialIndex = pokemons.url.replace(\"v2\", \"\");\n              const newIndex = initialIndex.replace(/[^0-9]/g, \"\");\n              const types = found\n                ? found.types.map(types => {\n                    return types.type.name;\n                  })\n                : null;\n\n              return (\n                <div key={index} className=\"testing\">\n                  <Card\n                    name={found ? found.name : null}\n                    index={newIndex}\n                    number={newIndex}\n                    weight={found ? found.weight : null}\n                    types={types}\n                  />\n                </div>\n              );\n            }\n          )}\n        </PokemonGrid>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  offset: state.pagination.value,\n  pokemons: state.card.pokemons,\n  pokemonInfo: state.pokemonInfo.pokemonInfo,\n  pokemonInfoLoaded: state.pokemonInfoLoaded,\n  LoadingData: state.pagination.fetchingData,\n  pokemonsLoadedAt: state.card.pokemonsLoadedAt\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchPokemons,\n      setPokemonInfo,\n      fetchingData,\n      receivedData\n    },\n\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardArray);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"../../Containers/App.css\";\n\nconst Search = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst SearchStyling = styled.input`\n  background: transparent;\n  border-radius: 16px;\n  height: 5vh;\n  width: 20vw;\n  text-align: center;\n  color: #dde5ff;\n  border: solid 2px white;\n  outline: none;\n  font-size: 2vh;\n`;\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <Search>\n      <SearchStyling\n        type=\"search\"\n        placeholder=\"Search Pokemon!\"\n        onChange={searchChange}\n      />\n    </Search>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { gatherStats } from \"./action\";\nimport { withRouter } from \"react-router-dom\";\n//import Spinner from \"./Spinner\";\n\nconst H1 = styled.h1`\n  color: white;\n  text-align: center;\n`;\nclass PokemonDetail extends Component {\n  componentDidMount() {\n    this.props.gatherStats(this.props.pokemonInfo, this.props.match.params.id);\n  }\n  render() {\n    if (this.props.stats === undefined) {\n      return <H1>Testing</H1>;\n    } else {\n      return this.props.stats.map((numbers, index) => {\n        return (\n          <H1>\n            {this.props.statProps[index]}:{numbers}\n          </H1>\n        );\n      });\n    }\n  }\n}\n\nconst mapStateToProps = state => ({\n  pokemonInfo: state.pokemonInfo.pokemonInfo,\n  stats: state.pokemonInfo.stats,\n  statProps: state.pokemonInfo.statsNames\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      gatherStats\n    },\n\n    dispatch\n  );\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(PokemonDetail)\n);\n","import { GET_POKEMONS } from \"../action\";\n\nconst initialState = {\n  pokemons: [],\n  pokemonLoadedAt: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case GET_POKEMONS:\n      return {\n        pokemons: data,\n        pokemonLoadedAt: new Date()\n      };\n\n    default:\n      return state;\n  }\n}\n","import { GET_OFFSET } from \"../action\";\n\nconst initialState = {\n  value: 0,\n  fetchingData: false,\n  receivedData: true\n};\n\nexport default function(state = initialState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case GET_OFFSET:\n      return {\n        ...state,\n        value: data\n      };\n\n    case \"fetchingData\":\n      return {\n        ...state,\n        fetchingData: true,\n        receivedData: false\n      };\n\n    case \"ReceivedData\":\n      return {\n        ...state,\n        fetchingData: false,\n        receivedData: true\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_POKEMONINFO } from \"../action\";\n\nconst initialState = {\n  pokemonInfo: [],\n  stats: [],\n  statsNames: [\n    \"HP\",\n    \"Attack\",\n    \"Defense\",\n    \"Special-Attack\",\n    \"Special-Defense\",\n    \"Speed\"\n  ]\n};\n\nexport default function(state = initialState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case SET_POKEMONINFO:\n      return {\n        ...state,\n        pokemonInfo: state.pokemonInfo.concat(data)\n      };\n    case \"GATHER_STATS\":\n      return {\n        ...state,\n        stats: data\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport card from \"../Components/Cards/cardReducer.js\";\nimport pagination from \"../Components/Pagination/PaginationReducer.js\";\nimport pokemonInfo from \"../Components/PokemonInfo/PokemonInfoReducer.js\";\n\nconst rootReducer = combineReducers({\n  card,\n  pagination,\n  pokemonInfo\n});\n\nexport default rootReducer;\n","import rootReducer from \"./rootReducer\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { loadFromLocalStorage, saveToLocalStorage } from \"./LocalStorage\";\n\nconst middleware = [logger, thunk];\n\nconst persistedState = loadFromLocalStorage();\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nstore.subscribe(() => {\n  saveToLocalStorage(\n    store.getState()\n    /* {\n    card: store.getState().card.pokemons,\n    pokemonInfo: store.getState().pokemonInfo.pokemonInfo,\n    statsNames: store.getState().pokemonInfo.statsNames\n    stats: store.getState().pokemonInfo.stats\n  } */\n  );\n});\n\nexport default store;\n","export const loadFromLocalStorage = () => {\n  try {\n    const checkingState = localStorage.getItem(\"store\");\n    if (checkingState === null) {\n      return undefined;\n    }\n    return JSON.parse(checkingState);\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\n\nexport const saveToLocalStorage = state => {\n  try {\n    const checkingState = JSON.stringify(state);\n    localStorage.setItem(\"store\", checkingState);\n  } catch (err) {}\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.png\";\nimport Pagination from \"../Components/Pagination/pagination\";\nimport CardArray from \"../Components/Cards/CardArray\";\nimport SearchBox from \"../Components/SearchBox/SearchBox\";\nimport PokemonDetails from \"../Components/PokemonDetails\";\nimport store from \"./store\";\n\nimport { Provider } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    searchfield: \"\"\n  };\n\n  searchChange = event => {\n    this.setState({\n      searchfield: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <Router basename=\"/\">\n        <Provider store={store}>\n          <APP>\n            <Header>\n              <Link to=\"/Pokemon-Search\">\n                <PokemonLogo src={logo} alt=\"pokemon-logo\" />\n              </Link>\n              <Credits>Made Possible With PokéAPI!</Credits>\n              <SearchBox searchChange={this.searchChange} />\n              <Pagination className=\"pagination\" />\n            </Header>\n            <Switch>\n              <Route exact path=\"/Pokemon-Search\">\n                <Body>\n                  <CardArray searchfield={this.state.searchfield} />\n                </Body>\n              </Route>\n              <Route\n                path=\"/:id\"\n                render={props => <PokemonDetails {...props} />}\n              />\n            </Switch>\n          </APP>\n        </Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\nconst APP = styled.div`\n  min-height: 100vh;\n  min-width: 100vw;\n  background: rgb(189, 19, 19);\n  background: linear-gradient(\n    0deg,\n    rgba(189, 19, 19, 1) 0%,\n    rgba(80, 0, 9, 1) 60%,\n    rgba(49, 143, 200, 1) 93%\n  );\n  background-attachment: fixed;\n`;\n\nconst Header = styled.div`\nbackground: transparent;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}\n`;\n\nconst PokemonLogo = styled.img`\n  height: 20vh;\n  width: 20vw;\n`;\n\nconst Credits = styled.h2`\n  color: white;\n  font-size: 2vh;\n`;\n\nconst Body = styled.div`\n  background: transparent;\n  height: auto;\n  width: auto;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}