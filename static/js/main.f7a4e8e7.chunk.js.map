{"version":3,"sources":["Containers/logo.png","Components/action.js","Components/Pagination/pagination.js","Components/Cards/Card.js","Components/Cards/CardArray.js","Components/SearchBox/SearchBox.js","Components/Cards/cardReducer.js","Components/Pagination/PaginationReducer.js","Components/PokemonInfo/PokemonInfoReducer.js","Containers/rootReducer.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","nextPage","data","type","prevPage","fetchPokemons","offset","dispatch","a","fetch","response","json","results","console","log","setPokemonInfo","Buttons","styled","div","PaginationText","p","Pagination","requestForNextPage","offsetCheck","props","requestForPrevPage","this","pokemons","pokemonInfo","names1","map","name","names2","checkingNames","some","names","includes","defs","reduce","accumulator","url","def","Promise","resolve","reject","push","all","pokemonData","prevProps","prevOffset","currOffset","nextRequest","onClick","className","Component","connect","state","pagination","value","card","ownProps","actionCreators","bindActionCreators","defaultProps","fetchPokemonInfo","Cards","CardInformation","H1","h1","H3","h3","PokemonImage","img","Card","index","number","weight","types","src","alt","PokemonGrid","CardArray","updateFilteredPokemon","searchfield","filteredPokemons","filter","toLowerCase","finalPokemons","found","find","newIndex","replace","key","pokemonInfoLoaded","Search","SearchStyling","input","SearchBox","searchChange","placeholder","onChange","initialState","rootReducer","combineReducers","action","concat","middleware","logger","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","event","setState","target","APP","Header","PokemonLogo","logo","Credits","Body","h2","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f7a4e8e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.083ed650.png\";","export const GET_OFFSET = \"GET_OFFSET\";\nexport const GET_POKEMONS = \"GET_POKEMONS\";\nexport const SET_POKEMONINFO = \"SET_POKEMONINFO\";\n\nexport function nextPage(data) {\n  return {\n    type: GET_OFFSET,\n    data\n  };\n}\n\nexport function prevPage(data) {\n  return {\n    type: GET_OFFSET,\n    data\n  };\n}\n\nexport const fetchPokemons = offset => async dispatch => {\n  try {\n    const API_URL = \"https://pokeapi.co/api/v2/pokemon/?offset=\";\n    const LIMIT_URL = \"&limit=20\";\n    const response = await fetch(`${API_URL}${offset}${LIMIT_URL}`);\n    const { results = [] } = await response.json();\n    return dispatch({\n      type: \"GET_POKEMONS\",\n      data: results\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const setPokemonInfo = data => dispatch => {\n  return dispatch({\n    type: SET_POKEMONINFO,\n    data: data\n  });\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport \"../../Containers/App.css\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { nextPage, prevPage, fetchPokemons, setPokemonInfo } from \"../action\";\n\nconst Buttons = styled.div`\n  color: white;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n`;\n\nconst PaginationText = styled.p`\n  font-size: 2vh;\n`;\n\nclass Pagination extends Component {\n  async nextRequest() {\n    const { pokemons, pokemonInfo } = this.props;\n\n    const names1 = pokemons.map(pokemons => {\n      return pokemons.name;\n    });\n    console.log(names1, \"NAMES!\");\n    const names2 = pokemonInfo.map(pokemons => {\n      return pokemons.name;\n    });\n    console.log(names2, \"NAMES!\");\n\n    const checkingNames = names1.some(names => names2.includes(names));\n    console.log(checkingNames, \"CHECKING NAMES\");\n\n    if (checkingNames !== true) {\n      const defs = this.props.pokemons.reduce((accumulator, { url }) => {\n        const def = new Promise(async (resolve, reject) => {\n          try {\n            const response = await fetch(url);\n            const results = await response.json();\n\n            resolve(results);\n          } catch (e) {\n            reject(e);\n          }\n        });\n\n        accumulator.push(def);\n        return accumulator;\n      }, []);\n      const pokemonData = await Promise.all(defs);\n      await this.props.setPokemonInfo(pokemonData);\n    } else {\n      console.log(\"ERROR WHEN SETTING POKEMON\");\n    }\n  }\n\n  requestForNextPage = () => {\n    const offsetCheck =\n      this.props.offset <= 346 ? this.props.offset + 20 : this.props.offset;\n    this.props.nextPage(offsetCheck);\n  };\n\n  requestForPrevPage = () => {\n    const offsetCheck =\n      this.props.offset !== 0 ? this.props.offset - 20 : this.props.offset;\n    this.props.prevPage(offsetCheck);\n  };\n\n  async componentDidUpdate(prevProps) {\n    const { offset: prevOffset } = prevProps;\n    const { offset: currOffset } = this.props;\n    if (prevOffset < currOffset) {\n      await this.props.fetchPokemons(this.props.offset);\n      console.log(this.props.pokemons, \"FETCH POKEMONS!!!!!\");\n      await this.nextRequest();\n    } else if (prevOffset > currOffset) {\n      return this.props.fetchPokemons(this.props.offset);\n    }\n  }\n\n  render() {\n    return (\n      <Buttons>\n        <PaginationText\n          onClick={this.requestForPrevPage}\n          className=\"pagination-prev\"\n        >\n          &laquo; Previous\n        </PaginationText>\n        <PaginationText\n          onClick={this.requestForNextPage}\n          className=\"pagination-next\"\n        >\n          Next &raquo;\n        </PaginationText>\n      </Buttons>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state\", state);\n  return {\n    offset: state.pagination.value,\n    pokemons: state.card.pokemons,\n    pokemonInfo: state.pokemonInfo.pokemonInfo\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  console.log(\"ownProps\", ownProps);\n\n  const actionCreators = bindActionCreators(\n    {\n      nextPage,\n      prevPage,\n      fetchPokemons,\n      setPokemonInfo\n    },\n    dispatch\n  );\n\n  return {\n    ...actionCreators\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n\nPagination.defaultProps = {\n  pokemons: [],\n  fetchPokemons: () => {},\n  fetchPokemonInfo: () => {}\n};\nPagination.propTypes = {\n  offset: PropTypes.number.isRequired,\n  fetchPokemons: PropTypes.func,\n  pokemons: PropTypes.array\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"../../Containers/App.css\";\n\nconst Cards = styled.div`\n  background: rgb(0, 0, 0);\n  background: linear-gradient(\n    144deg,\n    rgba(0, 0, 0, 1) 0%,\n    rgba(149, 214, 238, 1) 33%,\n    rgba(0, 145, 210, 1) 100%\n  );\n  border: solid 5px white;\n  border-radius: 12px;\n  height: 50vh;\n  width: 17vw;\n  margin: 2vh;\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst CardInformation = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n    justify-content center; \n    align-content: center;\n`;\n\nconst H1 = styled.h1`\n  font-size: 3vh;\n  margin: 5px;\n`;\n\nconst H3 = styled.h3`\n  font-size: 2vh;\n  margin: 5px;\n`;\n\nconst PokemonImage = styled.img`\n  margin: 5vh;\n  width: 8vw;\n`;\n\nconst Card = ({ name, index, number, weight, types }) => {\n  const type = types || [];\n  // console.log(type, \"TYPE CHECK\");\n  return (\n    <Cards>\n      <CardInformation>\n        <H1> {name} </H1>\n        <H3> Number: {number} </H3>\n        <PokemonImage\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index}.png`}\n          alt=\"pokemon\"\n        />\n        <H3>\n          Type: {type[0]} {type[1]}\n        </H3>\n        <H3>Weight: {weight} </H3>\n      </CardInformation>\n    </Cards>\n  );\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchPokemons, setPokemonInfo } from \"../action\";\n\nconst PokemonGrid = styled.div`\n  background: transparent;\n  display: flex;\n  flex-flow: row wrap;\n  height: auto;\n  width: 100vw;\n`;\n\nclass CardArray extends Component {\n  async componentDidMount() {\n    await this.props.fetchPokemons(this.props.offset);\n\n    const defs = this.props.pokemons.reduce((accumulator, { url }) => {\n      const def = new Promise(async (resolve, reject) => {\n        try {\n          const response = await fetch(url);\n          const results = await response.json();\n\n          resolve(results);\n        } catch (e) {\n          reject(e);\n        }\n      });\n\n      accumulator.push(def);\n      return accumulator;\n    }, []);\n    const pokemonData = await Promise.all(defs);\n    await this.props.setPokemonInfo(pokemonData);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.searchfield !== this.props.searchfield) {\n      console.log(\n        \"SEARCHFIELD DID UPDATE IN CARDARRAY\",\n        this.props.searchfield\n      );\n      this.updateFilteredPokemon(this.props.searchfield);\n    }\n  }\n\n  updateFilteredPokemon = searchfield => {\n    if (this.props.searchfield === \"\") {\n      return this.props.pokemons;\n    } else {\n      const filteredPokemons = this.props.pokemons.filter(pokemons => {\n        return pokemons.name.toLowerCase().includes(searchfield.toLowerCase());\n      });\n      console.log(\"filtered Pokemon is Set\", filteredPokemons);\n      let finalPokemons =\n        searchfield !== \"\" ? filteredPokemons : this.props.pokemons;\n      console.log(finalPokemons, \"POKEMON DATA\");\n\n      return finalPokemons;\n    }\n  };\n\n  render() {\n    const { pokemonInfo = [] } = this.props;\n    return (\n      <PokemonGrid>\n        {this.updateFilteredPokemon(this.props.searchfield).map(\n          (pokemons, index) => {\n            const found = pokemonInfo.find(\n              ({ name }) => name === pokemons.name\n            );\n            const initialIndex = pokemons.url.replace(\"v2\", \"\");\n            const newIndex = initialIndex.replace(/[^0-9]/g, \"\");\n            const types = found\n              ? found.types.map(types => {\n                  return types.type.name;\n                })\n              : null;\n            return (\n              <div key={index} className=\"testing\">\n                <Card\n                  name={pokemons.name}\n                  index={newIndex}\n                  number={newIndex}\n                  weight={found ? found.weight : null}\n                  types={types}\n                />\n              </div>\n            );\n          }\n        )}\n      </PokemonGrid>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  offset: state.pagination.value,\n  pokemons: state.card.pokemons,\n  pokemonInfo: state.pokemonInfo.pokemonInfo,\n  pokemonInfoLoaded: state.pokemonInfoLoaded\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchPokemons,\n      setPokemonInfo\n    },\n\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardArray);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"../../Containers/App.css\";\n\nconst Search = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst SearchStyling = styled.input`\n  background: transparent;\n  border-radius: 16px;\n  height: 5vh;\n  width: 20vw;\n  text-align: center;\n  color: #dde5ff;\n  border: solid 2px white;\n  outline: none;\n  font-size: 2vh;\n`;\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <Search>\n      <SearchStyling\n        type=\"search\"\n        placeholder=\"Search Pokemon!\"\n        onChange={searchChange}\n      />\n    </Search>\n  );\n};\n\nexport default SearchBox;\n","import { GET_POKEMONS } from \"../action\";\n\nconst initialState = {\n  pokemons: []\n  // pokemonInfo: []\n};\n\nexport default function(state = initialState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: data\n      };\n\n    /* case SET_POKEMONINFO:\n      return {\n        ...state,\n        pokemonInfo: data\n      }; */\n\n    default:\n      return state;\n  }\n}\n","import { GET_OFFSET } from \"../action\";\n\nconst initialState = {\n  value: 0\n};\n\nexport default function(state = initialState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case GET_OFFSET:\n      return {\n        ...state,\n        value: data\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_POKEMONINFO } from \"../action\";\n\nconst initialState = {\n  pokemonInfo: []\n};\n\nexport default function(state = initialState, action) {\n  const { type, data } = action;\n  switch (type) {\n    case SET_POKEMONINFO:\n      return {\n        ...state,\n        pokemonInfo: state.pokemonInfo.concat(data)\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport card from \"../Components/Cards/cardReducer.js\";\nimport pagination from \"../Components/Pagination/PaginationReducer.js\";\nimport pokemonInfo from \"../Components/PokemonInfo/PokemonInfoReducer.js\";\n\nconst rootReducer = combineReducers({\n  card,\n  pagination,\n  pokemonInfo\n});\n\nexport default rootReducer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.png\";\nimport Pagination from \"../Components/Pagination/pagination\";\nimport CardArray from \"../Components/Cards/CardArray\";\nimport SearchBox from \"../Components/SearchBox/SearchBox\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport styled from \"styled-components\";\n//import { load, save } from \"redux-localstorage-simple\";\n\nconst middleware = [logger, thunk];\nconst store = createStore(\n  rootReducer,\n\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nclass App extends Component {\n  state = {\n    searchfield: \"\"\n  };\n\n  searchChange = event => {\n    this.setState({\n      searchfield: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <APP>\n          <Header>\n            <PokemonLogo src={logo} className=\"App-Logo\" alt=\"pokemon-logo\" />\n            <Credits className=\" credits \">Made Possible With PokéAPI!</Credits>\n            <SearchBox searchChange={this.searchChange} />\n            <Pagination className=\"pagination\" />\n          </Header>\n          <Body>\n            <CardArray searchfield={this.state.searchfield} />\n          </Body>\n        </APP>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\nconst APP = styled.div`\n  min-height: 100vh;\n  min-width: auto;\n  background: rgb(189, 19, 19);\n  background: linear-gradient(\n    0deg,\n    rgba(189, 19, 19, 1) 0%,\n    rgba(80, 0, 9, 1) 60%,\n    rgba(49, 143, 200, 1) 93%\n  );\n  background-attachment: fixed;\n`;\n\nconst Header = styled.div`\nbackground: transparent;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n}\n`;\n\nconst PokemonLogo = styled.img`\n  height: 25vh;\n  width: 25vw;\n`;\n\nconst Credits = styled.h2`\n  color: white;\n  font-size: 3vh;\n`;\n\nconst Body = styled.div`\n  background: transparent;\n  height: auto;\n  width: auto;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}